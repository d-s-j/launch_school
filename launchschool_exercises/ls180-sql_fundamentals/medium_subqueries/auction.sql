/* Create database 'auction' */
CREATE DATABASE auction;

/* Create 3 tables, 'bidders', 'items', and 'bids' */
CREATE TABLE bidders (
  id serial PRIMARY KEY,
  name text NOT NULL
);

CREATE TABLE items (
  id serial PRIMARY KEY,
  name text NOT NULL,
  initial_price decimal(6,2) NOT NULL CHECK(initial_price BETWEEN 0.01 AND 1000.00),
  sales_price decimal(6,2) CHECK(sales_price BETWEEN 0.01 AND 1000.00)
);

CREATE TABLE bids (
  id serial PRIMARY KEY,
  bidder_id integer NOT NULL REFERENCES bidders(id) ON DELETE CASCADE,
  item_id integer NOT NULL REFERENCES items(id) ON DELETE CASCADE,
  amount decimal(6,2) NOT NULL CHECK(amount BETWEEN 0.01 AND 1000.00)
);

/* Create a composite index using 'bidder_id' and 'item_id' */
CREATE INDEX ON bids (bidder_id, item_id);

/* Use the `\copy` meta-command to import files into database */
\copy bidders FROM 'bidders.csv' WITH HEADER CSV;
\copy items FROM 'items.csv' WITH HEADER CSV;
\copy bids FROM 'bids.csv' WITH HEADER CSV;

/* Display all items that have bids put on them using `IN` and a subquery */
SELECT name AS "Bid on Items" FROM items
WHERE items.id IN (SELECT DISTINCT item_id FROM bids);

/* Display all items that have not been bid on using `NOT IN` and a subquery */
SELECT name AS "Not Bid On" FROM items
WHERE items.id NOT IN (SELECT DISTINCT item_id FROM bids);

/* Display names of people who has a bid in the auction using `EXISTS` and a subquery */
SELECT name FROM bidders
WHERE EXISTS (SELECT 1 FROM bids WHERE bids.bidder_id = bidders.id);
/* Use a JOIN clause */
SELECT name FROM bidders
JOIN bids ON bidders.id = bidder_id
GROUP BY bidders.id
ORDER BY bidders.id
;

/* Display person with most bids using a virtual table generated by a subquery */
SELECT MAX(bid_counts.count) FROM
  (SELECT COUNT(bidder_id) FROM bids GROUP BY bidder_id) AS bid_counts;

/* Display item name and how many bids placed on the item using a scalar subquery */
SELECT name, 
       (SELECT COUNT(item_id) FROM bids WHERE bids.item_id = items.id)
FROM items;
/* Use a JOIN clause */
SELECT name, COUNT(item_id) FROM items
LEFT JOIN bids ON item_id = items.id
GROUP BY items.id
ORDER BY items.id;

/* Display item id for the item that matches the data without using `AND` keyword */
SELECT id FROM items
WHERE ROW('Painting', 100.00, 250.00) =
      ROW(name, initial_price, sales_price);

/* Use `EXPLAIN` and `EXPLAIN ANALYZE` to check efficiency of the query statement */
EXPLAIN SELECT name FROM bidders
WHERE EXISTS (SELECT 1 FROM bids WHERE bids.bidder_id = bidders.id);

EXPLAIN ANALYZE SELECT name FROM bidders
WHERE EXISTS (SELECT 1 FROM bids WHERE bids.bidder_id = bidders.id);